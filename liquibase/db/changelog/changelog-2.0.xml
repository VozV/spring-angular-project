<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:pro="http://www.liquibase.org/xml/ns/pro"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd
        http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd ">

    <changeSet id="20200622-01" author="igorgilew">
        <tagDatabase tag="changelog-1.0"/>
    </changeSet>

    <changeSet id="20200622-02" author="igorgilew">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="INSTRUMENT" schemaName="public"/>
            </not>
        </preConditions>
        <comment>Liquibase. Create table INSTRUMENT</comment>
        <sql>
            create table INSTRUMENT (
                id serial primary key,
                idd int not null,
                number varchar(50),
                create_date timestamp(0) not null,
                delete_date timestamp(0)
            );
        </sql>
        <rollback>
            <sql>
                drop table INSTRUMENT;
            </sql>
        </rollback>
    </changeSet>


    <changeSet id="20200622-03" author="igorgilew">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="ROOM" schemaName="public"/>
            </not>
        </preConditions>
        <comment>Liquibase. Create table ROOM</comment>
        <sql>
            create table ROOM (
                id serial primary key,
                idd int not null,
                number varchar(5),
                block varchar(5),
                create_date timestamp(0) not null,
                delete_date timestamp(0)
            );
        </sql>
        <rollback>
            <sql>
                drop table ROOM;
            </sql>
        </rollback>
    </changeSet>

    <changeSet id="20200622-04" author="igorgilew">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="INSTRUMENT_TO_ROOM" schemaName="public"/>
            </not>
        </preConditions>
        <sql>
            create table INSTRUMENT_TO_ROOM(
                id serial primary key,
                instrument_idd int,
                room_idd int
            );
        </sql>
        <rollback>
            drop table INSTRUMENT_TO_ROOM;
        </rollback>
    </changeSet>

    <changeSet id="20200623-05" author="igorgilew">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="STUDENT" schemaName="public"/>
            </not>
        </preConditions>
        <comment>Liquibase. Create table STUDENT</comment>
        <sql>
            create table STUDENT(
                id serial primary key,
                idd int not null,
                first_name varchar(50) not null,
                middle_name varchar(50) not null,
                last_name varchar(50),
                passport varchar(15) not null,
                birth_date timestamp(0) not null,
                create_date timestamp(0) not null,
                delete_date timestamp(0),
                status varchar(10)
            );
        </sql>
        <rollback>
            drop table STUDENT;
        </rollback>
    </changeSet>

    <changeSet id="20200626-06" author="igorgilew">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="TEACHER" schemaName="public"/>
            </not>
        </preConditions>
        <comment>Liquibase. Create table TEACHER</comment>
        <sql>
            create table TEACHER(
                id serial primary key,
                idd int not null,
                first_name varchar(50) not null,
                middle_name varchar(50) not null,
                last_name varchar(50),
                passport varchar(15) not null,
                personal_info varchar(250),
                contacts varchar(250),
                birth_date timestamp(0) not null,
                create_date timestamp(0) not null,
                delete_date timestamp(0),
                status varchar(10)
            );
        </sql>
        <rollback>
            drop table TEACHER;
        </rollback>
    </changeSet>

    <changeSet id="20200626-07" author="igorgilew">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="USERR" schemaName="public"/>
            </not>
        </preConditions>
        <comment>Liquibase. Create table USERR</comment>
        <sql>
            create table USERR(
                id serial primary key,
                idd int not null,
                login varchar(20) not null,
                password varchar(100) not null,
                create_date timestamp(0) not null,
                delete_date timestamp(0),
                status varchar(10),
                person_type varchar(10),
                person_idd int not null
            );
        </sql>
        <rollback>
            drop table USERR;
        </rollback>
    </changeSet>

    <changeSet id="20200626-08" author="igorgilew">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="LESSON" schemaName="public"/>
            </not>
        </preConditions>
        <comment>Liquibase. Create table LESSON</comment>
        <sql>
            create table LESSON(
                id serial primary key,
                idd int not null,
                name varchar(50) not null,
                description varchar(1000),
                course_idd int not null,
                room_idd int not null,
                lesson_date_start timestamp(0) not null,
                lesson_date_end timestamp(0) not null,
                extra_instruments varchar(1000),
                create_date timestamp(0),
                delete_date timestamp(0),
                status varchar(10)
            );
        </sql>
        <rollback>
            drop table LESSON;
        </rollback>
    </changeSet>

    <changeSet id="20200626-09" author="igorgilew">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="COURSE" schemaName="public"/>
            </not>
        </preConditions>
        <comment>Liquibase. Create table COURSE</comment>
        <sql>
            create table COURSE(
                id serial primary key,
                idd int not null,
                name varchar(100) not null,
                description varchar(500),
                teacher_idd int not null,
                max_count_student int,
                start_date timestamp(0),
                end_date timestamp(0),
                create_date timestamp(0),
                delete_date timestamp(0),
                status varchar(10)
            );
        </sql>
        <rollback>
            drop table COURSE;
        </rollback>
    </changeSet>

    <changeSet id="20200622-10" author="igorgilew">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="STUDENT_TO_COURSE" schemaName="public"/>
            </not>
        </preConditions>
        <sql>
            create table STUDENT_TO_COURSE(
                id serial primary key,
                student_idd int not null,
                course_idd int not null,
                success boolean
            );
        </sql>
        <rollback>
            drop table STUDENT_TO_COURSE;
        </rollback>
    </changeSet>

    <changeSet id="20200622-11" author="igorgilew">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="INSTRUMENT_TO_LESSON" schemaName="public"/>
            </not>
        </preConditions>
        <sql>
            create table INSTRUMENT_TO_LESSON(
                id serial primary key,
                instrument_idd int not null,
                lesson_idd int not null
            );
        </sql>
        <rollback>
            drop table INSTRUMENT_TO_LESSON;
        </rollback>
    </changeSet>
</databaseChangeLog>